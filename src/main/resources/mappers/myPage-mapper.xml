<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.jmt.myPage.mapper.MyPageMapper">

	<!-- 로그인 -->
	<select id="login" resultType = "member">
		SELECT 
			MEMBER_NO, 
			MEMBER_NAME, 
			MEMBER_EMAIL, 
			MEMBER_PW, 
			PROFILE_IMG, 
			MEMBER_DEL_FL, 
			MEMBER_AUTH, 
			TO_CHAR(MEMBER_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') MEMBER_DATE 
		FROM MEMBER 
		WHERE MEMBER_EMAIL = #{loginEmail} 
		AND MEMBER_DEL_FL = 'N'

	</select>
	
	<!-- 회원 가입 -->
	<insert id="signUp">
		INSERT INTO "MEMBER"	
		VALUES(
			SEQ_MEMBER_NO.NEXTVAL,
			#{memberName},
			#{memberEmail},
			#{memberPw},
			NULL,DEFAULT, 0, DEFAULT)
	</insert>
	
	
	<!-- 이메일 중복 검사 -->
	<select id="emailCheck" resultType="_int">
		SELECT COUNT(MEMBER_EMAIL)
	    FROM MEMBER
	    WHERE MEMBER_DEL_FL = 'N'
	    AND MEMBER_EMAIL = #{email}
	</select>



	<!-- 이름 중복 검사 -->
	<select id="nameCheck" resultType="_int">
		SELECT COUNT(MEMBER_NAME)
	    FROM MEMBER
	    WHERE MEMBER_DEL_FL = 'N'
	    AND MEMBER_NAME = #{memberName}
	</select>
	
	
	
	<!-- 비밀번호 변경 -->
	<update id="passwordChange">
		UPDATE "MEMBER"
		SET MEMBER_PW = #{encPw}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<!-- 회원 탈퇴 -->
	<update id="withdrawal">
		UPDATE "MEMBER"
		SET MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	
	<!-- 이름/이미지 변경 -->
	<update id="updateInfo">
		UPDATE "MEMBER"
		SET 
			<if test="profileImg != null and !profileImg.equals('')">
             	PROFILE_IMG = #{profileImg},
         	</if>

			MEMBER_NAME = #{memberName}
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<select id="findMemberNoByEmail">
		SELECT MEMBER_NO
		FROM "MEMBER"
		WHERE MEMBER_EMAIL = #{email}
		AND MEMBER_DEL_FL = 'N'
	</select>
	

	<update id="updatePassword">
		UPDATE "MEMBER"
		SET MEMBER_PW = #{encPw} 
		WHERE MEMBER_NO = #{memberNo}
		AND MEMBER_DEL_FL = 'N'
	</update>
	
	
	
	<!-- 찜 목록 개수 조회 -->
	<select id="getLikeListCount">
		SELECT
			COUNT(*)
		FROM "RESTAURANT"
		JOIN "BOOKMARK" USING (RESTAURANT_NO)
		WHERE
			MEMBER_NO = #{memberNo}
	</select>
	
	
	<select id="selectLikeList"
			resultType="RestaurantDto">
			SELECT 
			   RESTAURANT_NO, 
			   RESTAURANT_NAME,
			   RESTAURANT_TEL,
			   RESTAURANT_ADDRESS,
			   RESTAURANT_IMG1,
			   LOCATION_NAME,
			   CATEGORY_NAME,
		    (CASE 
		        WHEN EXISTS (SELECT 1 
		                     FROM BOOKMARK SUB 
		                     WHERE SUB.RESTAURANT_NO = RESTAURANT_NO 
		                       AND SUB.MEMBER_NO = #{memberNo}) 
		        THEN 1 
		        ELSE 0 
		     END) AS LIKE_CHECK,

			    ROUND(NVL(    
		          (SELECT COUNT(*)
		          FROM REVIEW
		          WHERE LIKE_FL = 'Y'
		          AND RESTAURANT_NO = RESTAURANT_NO) /   
		          NULLIF(     
		                   (SELECT COUNT(*)
		                   	FROM REVIEW
		                    WHERE RESTAURANT_NO = RESTAURANT_NO), 0), 0
			    ) * 100 )AS "LIKE_PERCENT"  
			FROM "RESTAURANT" R
			JOIN LOCATION USING (LOCATION_NO)
			JOIN CATEGORY USING (CATEGORY_NO)
			JOIN "BOOKMARK" USING (RESTAURANT_NO)
			WHERE RESTAURANT_DEL_FL = 'N'
			AND MEMBER_NO = #{memberNo}
			GROUP BY RESTAURANT_NO, RESTAURANT_IMG1,RESTAURANT_ADDRESS,RESTAURANT_TEL,R.RESTAURANT_NAME, LOCATION_NAME,   CATEGORY_NAME, RESTAURANT_IMG1
	</select>
	
</mapper>
